{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTabIdCopy","length","map","tab","id","includes","className","isTabSelected","href","onClick","title","find","content","App","useState","setSelectedTabId","selectedTab","ReactDOM","render","document","getElementById"],"mappings":"iMAYaA,EAAO,SAAC,GAAuD,IAAD,EAApDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,cACtCC,EAAoBF,EAMxB,OAJID,EAAKI,OAAS,IAAMJ,EAAKK,KAAI,SAAAC,GAAG,OAAIA,EAAIC,MAAIC,SAASP,KACvDE,EAAoBH,EAAK,GAAGO,IAI5B,sBAAK,UAAQ,gBAAb,UACE,qBAAKE,UAAU,gBAAf,SACE,6BACGT,EAAKK,KAAI,SAAAC,GACR,IAAMI,EAAgBJ,EAAIC,KAAOJ,EAEjC,OACE,oBACE,UAAQ,MAERM,UAAWC,EAAgB,YAAc,GAH3C,SAKE,mBACEC,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QACE,kBAAOF,EAAgB,GAAKR,EAAcI,IAJ9C,SAOGA,EAAIO,SAVFP,EAAIC,WAkBnB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,mBACGT,EAAKc,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAOJ,YAD/B,aACG,EAAgDY,cC1C5Cf,EAAO,CAClB,CAAEO,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAASjB,EAAK,GAAGO,IAA3D,mBAAON,EAAP,KAAsBiB,EAAtB,KAIA,OACE,sBAAKT,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IAFH,UAGIT,EAAKc,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAON,YAHhC,aAGG,EAA8CY,SAGjD,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,cAba,SAACiB,GAAD,OAAsBD,EAAiBC,EAAYZ,WCZxEa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.190e0c3b.chunk.js","sourcesContent":["export type Tab = {\n  id: string\n  title: string\n  content: string\n};\n\ntype TabsProps = {\n  tabs: Tab[]\n  selectedTabId: string\n  onTabSelected: (tab: Tab) => void\n};\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: TabsProps) => {\n  let selectedTabIdCopy = selectedTabId;\n\n  if (tabs.length > 0 && !tabs.map(tab => tab.id).includes(selectedTabId)) {\n    selectedTabIdCopy = tabs[0].id;\n  }\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const isTabSelected = tab.id === selectedTabIdCopy;\n\n            return (\n              <li\n                data-cy=\"Tab\"\n                key={tab.id}\n                className={isTabSelected ? 'is-active' : ''}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={\n                    () => (isTabSelected ? {} : onTabSelected(tab))\n                  }\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabIdCopy)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab, Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onClickTab = (selectedTab: Tab) => setSelectedTabId(selectedTab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {(tabs.find(tab => tab.id === selectedTabId))?.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onClickTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}