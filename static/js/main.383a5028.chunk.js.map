{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTabContent","find","id","content","selectedTab","className","map","tab","href","onClick","handleTabSelect","title","App","useState","setSelectedTabId","selectedTabTitle","ReactDOM","render","document","getElementById"],"mappings":"iMAYaA,EAAO,SAAC,GAAuD,IAAD,EAApDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,cACpCC,EAAkB,UAAGH,EACxBI,MAAK,qBAAGC,KAAgBJ,YADH,aAAG,EACgBK,QACrCC,EAAcP,EACjBI,MAAK,qBAAGC,KAAgBJ,MAAkBD,EAAK,GAOlD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKQ,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAC,GAAG,OACX,oBACE,UAAQ,MAERF,UAAWD,EAAYF,KAAOK,EAAIL,GAAK,YAAc,GAHvD,SAKE,mBACEM,KAAI,WAAMD,EAAIL,IACd,UAAQ,UACRO,QAAS,kBAnBC,SAACF,GACnBA,EAAIL,KAAOE,EAAYF,IACzBH,EAAcQ,GAiBWG,CAAgBH,IAHjC,SAKGA,EAAII,SARFJ,EAAIL,WAejB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGL,QCxCIH,EAAO,CAClB,CAAEK,GAAI,QAASS,MAAO,QAASR,QAAS,eACxC,CAAED,GAAI,QAASS,MAAO,QAASR,QAAS,eACxC,CAAED,GAAI,QAASS,MAAO,QAASR,QAAS,gBAG7BS,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAAShB,EAAK,GAAGK,IAA3D,mBAAOJ,EAAP,KAAsBgB,EAAtB,KAEMC,EAAgB,UAAGlB,EACtBI,MAAK,qBAAGC,KAAgBJ,YADL,aAAG,EACkBa,MAE3C,OACE,sBAAKN,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,KAGtB,cAAC,EAAD,CACElB,KAAMA,EACNC,cAAeA,EACfC,cAba,SAAC,GAAD,IAAGG,EAAH,EAAGA,GAAH,OAAiBY,EAAiBZ,UCXvDc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.383a5028.chunk.js","sourcesContent":["export type Tab = {\n  id: string\n  title: string\n  content: string\n};\n\ntype TabsProps = {\n  tabs: Tab[]\n  selectedTabId: string\n  onTabSelected: (tab: Tab) => void\n};\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: TabsProps) => {\n  const selectedTabContent = tabs\n    .find(({ id }) => id === selectedTabId)?.content;\n  const selectedTab = tabs\n    .find(({ id }) => id === selectedTabId) || tabs[0];\n  const handleTabSelect = (tab: Tab) => {\n    if (tab.id !== selectedTab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={selectedTab.id === tab.id ? 'is-active' : ''}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabSelect(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab, Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const onClickTab = ({ id }: Tab) => setSelectedTabId(id);\n  const selectedTabTitle = tabs\n    .find(({ id }) => id === selectedTabId)?.title;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabTitle}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onClickTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}